name: release on TestPyPI

on:
  push:
    tags:
      - snapshot_sapl_base_v*
      - snapshot_sapl_django_v*
      - snapshot_sapl_flask_v*
      - snapshot_sapl_tornado_v*


jobs:

  # Set output variables for the subsequent jobs, depending on the triggering tag
  identify-package:
    outputs:
      packagename: ${{ steps.identifier.outputs.packagename }}
    runs-on: ubuntu-latest
    steps:
      - name: allow only push to master
        if: ${{ !(github.event.base_ref == 'refs/heads/master') }}
        run: exit 1
      - id: packagename
        run: |
          if   ${{ startsWith(github.ref_name, 'snapshot_sapl_base_v') }} 
          then 
            echo "::set-output name=packagename::snapshot_sapl_base"
          elif ${{ startsWith(github.ref_name, 'snapshot_sapl_django_v') }} 
          then 
            echo "::set-output name=packagename::snapshot_sapl_django"
          elif ${{ startsWith(github.ref_name, 'snapshot_sapl_flask_v') }} 
          then
            echo "::set-output name=packagename::snapshot_sapl_flask"
          elif ${{ startsWith(github.ref_name, 'snapshot_sapl_tornado_v') }} 
          then
            echo "::set-output name=packagename::snapshot_sapl_tornado"
          fi
        shell: bash

      - name: notag
        if: ${{ !steps.identifier.outputs.packagename }}
        run: exit 1

      - run: echo ${{ steps.identifier.outputs.packagename }}


# Build the package and run tests
  run-tests:
    needs: identify-package
    runs-on: ubuntu-latest
    env:
      identifier: ${{ needs.identify-package.outputs.packagename }}
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        pip install ./${{ env.identifier }}

    - name: Testing
      run: |
        cd ${{ env.identifier }}
        python -m unittest


# Release the package on TestPyPI
  release:
    needs: [ identify-package, run-tests]

    runs-on: ubuntu-latest
    env:
      identifier: ${{ needs.identify-package.outputs.packagename }}
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build ${{ env.identifier }}
      run: python -m build ./${{ env.identifier }}

    - name: Publish ${{ env.identifier }}
      uses: pypa/gh-action-pypi-publish@v1.5.0
      with:
        packages_dir: ./${{ env.identifier }}/dist
        user: __token__
        password: ${{ secrets.PYPI_TEST_TOKEN }}
        repository_url: https://test.pypi.org/legacy/


# Remove the triggering Tag, when any job fails
  remove-on-failure:
    if: ${{ failure() }}
    needs: [ identify-package, release, run-tests ]
    runs-on: ubuntu-latest
    steps:
      - name: remove triggering Tag
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            try {
                await github.rest.git.deleteRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: "tags/${{ github.ref_name }}"
                })
            } catch (e) {
              console.log("The tag doesn't exist yet: " + e)
            }